DAMON-based Operation Schemes (DAMOS) allows users to manage memory based on
data access pattern.  However, there are special cases that data access pattern
only cannot describe.  For example, some users would want to run DAMON-based
proactive reclamation for file-mapped pages only, if their swap device is too
slow.  There could also be some special processes like latency critical
processes that users feel already well tuned and therefore don't want DAMOS to
bother.

To support such a case, this patchset introduces non-access pattern oriented
filters for DAMOS.  It allows users to allow or deny specific type and range of
memory for given DAMON-based operation schemes.  The feature is exposed to
users in both kernel space and suer space, via the kernel API
(include/linux/damon.h) and the DAMON sysfs interface (/sys/kernel/mm/damon/).

For example, users can protect anonymous pages in virtual address range 300-700
of 'special_program', and memcgroup of id <X> from DAMOS as below.

# cd kdamonds/0/contexts/0/schemes/0/
# echo 2 > filters/nr_filters
# echo anon > filters/0/type
# echo pidof(special_program) > filters/0/pid
# echo 300 > filters/0/start
# echo 700 > filters/0/end
# echo deny > allow_deny
#
# echo <X> > filters/1/memcg_id
# echo deny > allow_deny
