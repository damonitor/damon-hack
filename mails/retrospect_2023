From: SeongJae Park <sj@kernel.org>
Cc: damon@lists.linux.dev
  linux-mm@kvack.org
  linux-kernel@vger.kernel.org
  linux-damon@amazon.com
  linux-damon-trial@amazon.com
Subject: Looking back DAMON development in 2023

Hello,


A year has passed since I shared my humble retrospect of 2022[1] for DAMON.
I'd like to continue that by sharing some events and statistics of this year's
DAMON development which I was personally interested, and saying thank you to
the community.

Summary
=======

DAMON has explored and used by more people and products.  DAMON user-space
tool, damo[2], got its 100th GitHub star, and deployed by seven major Linux
distros' packaging systems.  Four papers, three articles, and one conference
presentation that exploring and introducing DAMON has published by peope other
than the maintainer of DAMON.  A product that managing tiered memory using
DAMON has officially released.

Substantial amount of development was also continued.  Four major DAMON kernel
side features have developed.  Signficant amount of new features for damo has
added.  The user-space tool also released its second major version (v2.0).

24 people contributed their great code to DAMON via making 158 commits merged
into the mainline.  About 26% of the commits were made by Amazon-external
contributors.

About 0.2% of the commits for whole Linux tree was made for DAMON.  Among the
changes for DAMON's parent subsystem, mm, about 9.5% of commits and 8.3% of
lines of changes were made for DAMON.

Six people contributed 1,874 commits to DAMON user-space tool, damo.

Key Events
==========

DAMON user-space tool, damo[2], got significant achievement in 2023.  'damo'
was deployed via PyPI since 2021 August, and ArchLinux started packaing it
since 2022 March[3].  In 2023, Fedora has been the second major Linux distro
packaging the tool since May[4].  It has pacakaged for more distros, and as of
this writing, ArchLinux, Debian, Devuan, Fedora, Kali Linux, Raspbian, and
Ubuntu are[5] packaging the tool.  It also got it's 100th release[6] and 100th
GitHub star in August.

A few articles and papers introducing or exploring DAMON have published.  Two
LWN articles[7,8] that briefly introducing DAMON's new feature and sharing
detailed status/plan discussions on LSFMM, respectively, have published in
March and May.  A blog post[9] from Hocus that briefly exploring DAMON as a way
for reducing memory footprint on virtual machines together with free pages
reporting feature has published in July.  In February[10], September[11], and
Octover[12], papers exploring DAMON on tiered memory management have published
by ArXiv and SOSP.  One more paper from Intel that improving DAMON for terabyte
scale memory system has published by ArXiv in November[13].

We also shared DAMON and its future plans with more people in multiple venues.
We shared the development status and plans with other kernel developers at
LSFMM[14] and Kernel Summit at LinuxPlumbers[15] in May and November,
respectively, while also providing DAMON's high level usage and the user space
tool at Open Source Summit North America[16] and Europe[17] in May and
September, respectively.  Especially in LinuxPlumbers, we also had the second
in-person DAMON community meetup[18], which doubled the number of attendee
compared to the one we had in 2022.

DAMON community has also committed[19] to test and share stable release
candidate kernels since August.

SK Hynix has released their second major version of Heterogeneous Memory
Software Development Kit (HMSDK), which uses DAMON for their CXL-based tiered
memory management, just a few days before this writing.  Maybe that's the first
official product level tiered memory management usage of DAMON.

A list of more detailed events in 2023 is available at the DAMON news page
(https://sjp38.github.io/post/damon_news/#2023).

Key Features
============

We started 2023 with Linux v6.2 that delivered DAMOS tried regions
feature[20] that developed in 2022.

DAMOS filters[21] feature has developed and merged in the mainline by v6.3-rc1,
which was released in March.  The feature has later expanded[22] for more use
cases and merged in the mainline by v6.6-rc1, which was released in September.

Two more DAMON features for pseudo-moving average based reliable and speedy
DAMON snapshot generation[23] and DAMOS-independent apply time interval[24]
have developed and merged in the mainline by v6.7-rc1, which was reelased in
November.

Finally, we developed user feedback-based DAMOS aggressiveness auto-tuning[25],
which currently merged in the mm tree.  Hopefully it will be merged in the
mainline by v6.8-rc1, which expected to be released in January.

Development Statistics
======================

To appreciate and list all names of people who made DAMON available, and to
quantify what 2022 was for DAMON development, I collected some numbers using my
humble and buggy scripts.  The scripts are available as open source[26,27].

Please note that numbers don't say everything.  Nonetheless, it's better than
nothing, and fun ;) in my humble opinion.

Contributors
------------

According to the humble script, 24 people have contributed to DAMON development
in 2023 (v6.2-rc2..v6.7-rc7).

    $ ./lazybox/git_helpers/authors.py ./linux \
            --commits_range v6.2-rc2..v6.7-rc7 --skip_merge_commits \
            --linux_subsystems "DATA ACCESS MONITOR"
    1. SeongJae Park <sj@kernel.org>: 119 commits
    2. Kefeng Wang <wangkefeng.wang@huawei.com>: 10 commits
    3. Ryan Roberts <ryan.roberts@arm.com>: 4 commits
    4. Jinjie Ruan <ruanjinjie@huawei.com>: 3 commits
    5. Bjorn Helgaas <bhelgaas@google.com>: 2 commits
    6. Vishal Moola (Oracle) <vishal.moola@gmail.com>: 2 commits
    7. Hyeongtak Ji <hyeongtak.ji@sk.com>: 1 commits
    8. Dan Carpenter <dan.carpenter@linaro.org>: 1 commits
    9. Huan Yang <link@vivo.com>: 1 commits
    10. Andreas Gruenbacher <agruenba@redhat.com>: 1 commits
    11. Juntong Deng <juntong.deng@outlook.com>: 1 commits
    12. Levi Yun <ppbuk5246@gmail.com>: 1 commits
    13. Suren Baghdasaryan <surenb@google.com>: 1 commits
    14. Feng Tang <feng.tang@intel.com>: 1 commits
    15. Hugh Dickins <hughd@google.com>: 1 commits
    16. Anders Roxell <anders.roxell@linaro.org>: 1 commits
    17. Thomas Weißschuh <linux@weissschuh.ne>: 1 commits
    18. andrew.yang <andrew.yang@mediatek.com>: 1 commits
    19. Baolin Wang <baolin.wang@linux.alibaba.com>: 1 commits
    20. Thomas Weißschuh <linux@weissschuh.net>: 1 commits
    21. Liam R. Howlett <Liam.Howlett@oracle.com>: 1 commits
    22. Huaisheng Ye <huaisheng.ye@intel.com>: 1 commits
    23. Hui Su <suhui_kernel@163.com>: 1 commits
    24. Xu Panda <xu.panda@zte.com.cn>: 1 commits
    # 24 authors, 158 commits in total

The output for 2022[3] was as below.

    1. SeongJae Park <sj@kernel.org>: 192 commits
    2. Xin Hao <xhao@linux.alibaba.com>: 19 commits
    3. Kaixu Xia <kaixuxia@tencent.com>: 15 commits
    4. Baolin Wang <baolin.wang@linux.alibaba.com>: 5 commits
    5. Matthew Wilcox (Oracle) <willy@infradead.org>: 4 commits
    6. Changbin Du <changbin.du@gmail.com>: 4 commits
    7. Yang Yingliang <yangyingliang@huawei.com>: 2 commits
    8. SeongJae Park <sjpark@amazon.de>: 2 commits
    9. Rong Tao <rongtao@cestc.cn>: 1 commits
    10. Christophe JAILLET <christophe.jaillet@wanadoo.fr>: 1 commits
    11. Jason A. Donenfeld <Jason@zx2c4.com>: 1 commits
    12. Dawei Li <set_pte_at@outlook.com>: 1 commits
    13. Yajun Deng <yajun.deng@linux.dev>: 1 commits
    14. Levi Yun <ppbuk5246@gmail.com>: 1 commits
    15. Liam R. Howlett <Liam.Howlett@Oracle.com>: 1 commits
    16. Kenneth Lee <klee33@uw.edu>: 1 commits
    17. Greg Kroah-Hartman <gregkh@linuxfoundation.org>: 1 commits
    18. Badari Pulavarty <badari.pulavarty@intel.com>: 1 commits
    19. Kairui Song <kasong@tencent.com>: 1 commits
    20. Jianglei Nie <niejianglei2021@163.com>: 1 commits
    21. Gautam <gautammenghani201@gmail.com>: 1 commits
    22. Mike Rapoport <rppt@linux.ibm.com>: 1 commits
    23. Chengming Zhou <zhouchengming@bytedance.com>: 1 commits
    24. Kefeng Wang <wangkefeng.wang@huawei.com>: 1 commits
    25. Gautam Menghani <gautammenghani201@gmail.com>: 1 commits
    26. Jiapeng Chong <jiapeng.chong@linux.alibaba.com>: 1 commits
    27. Hailong Tu <tuhailong@gmail.com>: 1 commits
    28. Yu Zhe <yuzhe@nfschina.com>: 1 commits
    29. Xiaomeng Tong <xiam0nd.tong@gmail.com>: 1 commits
    30. Jonghyeon Kim <tome01@ajou.ac.kr>: 1 commits
    31. tangmeng <tangmeng@uniontech.com>: 1 commits
    32. Miaohe Lin <linmiaohe@huawei.com>: 1 commits
    33. Guoqing Jiang <guoqing.jiang@linux.dev>: 1 commits
    34. Yihao Han <hanyihao@vivo.com>: 1 commits
    35. Jakub Kicinski <kuba@kernel.org>: 1 commits
    36. Colin Ian King <colin.i.king@googlemail.com>: 1 commits
    37. Rongwei Wang <rongwei.wang@linux.alibaba.com>: 1 commits
    38. Rikard Falkeborn <rikard.falkeborn@gmail.com>: 1 commits
    39. Colin Ian King <colin.king@canonical.com>: 1 commits
    40. Geert Uytterhoeven <geert@linux-m68k.org>: 1 commits
    # 40 authors, 275 commits in total

The number is quite reduced compared to 2022 (40 -> 24).  That's maybe because
the community is shrinking, or hopefully because DAMON code has much more
stabilized.

Please note that there were many more unsung hero contributors who contributed
valuable inputs, discussions, and many more things for DAMON development.  So
shame that I cannot put everyone's name here.

Thank you so much to all awesome contributors!

Contributions from non-maintainer
---------------------------------

The maintainer, SJ (sj@kernel.org), has driven the development of DAMON, but
helps from the community were huge.  About 26.56% of DAMON commits have made by
people other than SJ.  Again, the number is reduced compared to that of last
year (33% -> 26%).

    $ ./damon-hack/stat_damon_portion_community_commits.sh \
            ./linux ./damon-hack/stat_branches_2023
    range           from_sj non_sj  non_sj_portion
    v6.1..v6.2      28      6       17.65 %
    v6.2..v6.3      32      16      33.33 %
    v6.3..v6.4      0       5       100.00 %
    v6.4..v6.5      19      8       29.63 %
    v6.5..v6.6      20      7       25.93 %
    v6.6..v6.7-rc1  42      9       17.65 %
    v6.1..v6.7-rc1  141     51      26.56 %

The output for 2022 was as below.

    range               from_sj non_sj    non_sj_portion
    v5.15..v5.16        50      13        20.63%
    v5.16..v5.17        16      10        38.46%
    v5.17..v5.18        26      10        27.78%
    v5.18..v5.19        23      7         23.33%
    v5.19..v6.0         15      14        48.28%
    v6.0..v6.1          33      36        52.17%
    v6.1..v6.2-rc1      28      6         17.65%
    v5.15..v6.2-rc1     191     95        33.22%


Portion of DAMON Commits in MM and Linux
----------------------------------------

To show how much change DAMON made to its parent subsystem, MM, and whole
Linux, I counted the number of commits that touched mm/damon, mm/ and any file
of the Linux tree in 2022 releases (v5.15..v6.2-rc1).  Note that I counted
changes touching only mm/damon/ and mm/ for DAMON and MM appropriately (doesn't
count changes for documents, headers, tests, etc), for simplicity.

According to the buggy and humble script, about 9.50% of MM commits, and 0.21%
of Linux commits were made for DAMON.  Compared to the numbers for 2022,
absolute number of DAMON commits has slightly reduced (211 -> 181), but the
proportion of DAMON commits against MM commits has increased (8.63% -> 9.50%),
while the portion against Linux has not changed (0.21%).

    $ ./damon-hack/stat_damon_portion_nr_commits.sh \
            ./linux ./damon-hack/stat_branches_2023
    range             damon    mm      damon/mm    linux    damon/linux
    v6.1..v6.2        31       287     10.80%      15536    0.20%
    v6.2..v6.3        47       401     11.72%      14424    0.33%
    v6.3..v6.4        5        288     1.74%       14835    0.03%
    v6.4..v6.5        26       299     8.70%       13561    0.19%
    v6.5..v6.6        25       361     6.93%       14069    0.18%
    v6.6..v6.7-rc1    47       270     17.41%      15418    0.30%
    v6.1..v6.7-rc1    181      1906    9.50%       87843    0.21%

The output for 2022

    range               damon mm   damon/mm linux  damon/linux
    v5.15..v5.16        45    307  14.66%   14190  0.32%
    v5.16..v5.17        17    223  7.62%    13038  0.13%
    v5.17..v5.18        29    448  6.47%    14954  0.19%
    v5.18..v5.19        24    399  6.02%    15134  0.16%
    v5.19..v6.0         15    283  5.30%    15402  0.10%
    v6.0..v6.1          61    536  11.38%   13942  0.44%
    v6.1..v6.2-rc1      20    250  8.00%    13687  0.15%
    v5.15..v6.2-rc1     211   2446 8.63%    100347 0.21%

By Number of Lines
------------------

I further counted the portion of the number of changed lines.  Didn't count
that for Linux here due to the slow speed of the script.  Please also note that
I count changes touching only mm/damon/ and mm/ as same to above case.  The
script argues about 8.31% of the changes lines for MM subsystem were for DAMON.
This is a quite decrease compared to that of last year (14.32%).  Hopefully
that's because DAMON became more stabilized.

    $ ./damon-hack/stat_damon_portion_lines.sh \
            ./linux ./damon-hack/stat_branches_2023
    range             damon    mm       damon/mm
    v6.1..v6.2        3309     11183    29.59%
    v6.2..v6.3        962      13213    7.28%
    v6.3..v6.4        32       14226    0.22%
    v6.4..v6.5        113      9852     1.15%
    v6.5..v6.6        322      7862     4.10%
    v6.6..v6.7-rc1    783      10108    7.75%
    v6.1..v6.7-rc1    5521     66444    8.31%

The output for 2022

    range               damon mm    damon/mm
    v5.15..v5.16        2157  8503  25.37%
    v5.16..v5.17        324   9370  3.46%
    v5.17..v5.18        3462  16288 21.25%
    v5.18..v5.19        929   10185 9.12%
    v5.19..v6.0         870   8665  10.04%
    v6.0..v6.1          1752  25844 6.78%
    v6.1..v6.2-rc1      3309  10544 31.38%
    v5.15..v6.2-rc1     12803 89399 14.32%

Conclusion
==========

DAMON community delivered a number of important features and quite a number of
changes to the world via the collaboration between the 26 great contributors.
I would call 2023 as one of the successful and grateful years of DAMON
development.

Huge thanks to you again, DAMON community.  Looking forward to continuing our
journey in 2023.

Hope you all enjoy the remaining holidays and happy new year!


Thanks,
SJ

[1] https://lore.kernel.org/damon/20221229171209.162356-1-sj@kernel.org/
[2] https://github.com/awslabs/damo
[3] https://aur.archlinux.org/packages/damo
[4] https://packages.fedoraproject.org/pkgs/python-damo/damo/
[5] https://repology.org/project/damo/versions
[6] https://lore.kernel.org/damon/20230807202044.98700-1-sj@kernel.org/
[7] LWN article about DAMOS filter: https://lwn.net/Articles/924384/
[8] LWN article about DAMON LSFMM discussion: https://lwn.net/Articles/931769/
[9] https://hocus.dev/blog/qemu-vs-firecracker/
[10] https://arxiv.org/pdf/2302.09468.pdf
[11] arXiv paper https://arxiv.org/pdf/2309.01736.pdf
[12] https://dl.acm.org/doi/10.1145/3600006.3613167
[13] https://arxiv.org/pdf/2311.10275.pdf
[14] https://www.youtube.com/watch?v=bbC23ApPvow
[15] https://lpc.events/event/17/contributions/1624/
[16] https://ossna2023.sched.com/event/1K5HS
[17] https://osseu2023.sched.com/event/1OGf9
[18] https://lpc.events/event/17/contributions/1652/
[19] https://lore.kernel.org/damon/20230802173033.108621-1-sj@kernel.org/
[20] https://lore.kernel.org/damon/20221101220328.95765-1-sj@kernel.org/
[21] https://lore.kernel.org/damon/20221205230830.144349-1-sj@kernel.org/
[22] https://lore.kernel.org/damon/20230802214312.110532-1-sj@kernel.org/
[23] https://lore.kernel.org/damon/20230915025251.72816-1-sj@kernel.org/
[24] https://lore.kernel.org/damon/20230916020945.47296-1-sj@kernel.org/
[25] https://lore.kernel.org/damon/20231130023652.50284-1-sj@kernel.org/
[26] https://github.com/sjp38/lazybox
[27] https://git.kernel.org/sj/damon-hack/h/master
[28] https://github.com/skhynix/hmsdk/releases/tag/hmsdk-v2.0
