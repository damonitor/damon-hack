From 5ced573547a63b5a90dd3eaf054ee57bc26248e6 Mon Sep 17 00:00:00 2001
From: SeongJae Park <sj@kernel.org>
Date: Sat, 11 May 2024 12:12:49 -0700
Subject: [PATCH] fix build error

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/paddr.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/mm/damon/paddr.c b/mm/damon/paddr.c
index 30171f4b863b..f4de97a9cdb9 100644
--- a/mm/damon/paddr.c
+++ b/mm/damon/paddr.c
@@ -273,7 +273,7 @@ static unsigned int __damon_pa_migrate_folio_list(
 		return 0;
 
 	/* Migration ignores all cpuset and mempolicy settings */
-	migrate_pages(migrate_folios, alloc_migrate_folio, NULL,
+	migrate_pages(migrate_folios, alloc_demote_folio, NULL,
 		      (unsigned long)&mtc, MIGRATE_ASYNC, MR_DAMON,
 		      &nr_succeeded);
 
@@ -408,7 +408,7 @@ static unsigned long damon_pa_migrate(struct damon_region *r, struct damos *s,
 		 * Since unevictable folios can be migrated, unevictable test
 		 * is needed only for pageout.
 		 */
-		if (mm == MIG_PAGEOUT && folio_test_unevictable(folio))
+		if (mode == DAMOS_MIG_PAGEOUT && folio_test_unevictable(folio))
 			folio_putback_lru(folio);
 		else
 			list_add(&folio->lru, &folio_list);
@@ -422,8 +422,7 @@ static unsigned long damon_pa_migrate(struct damon_region *r, struct damos *s,
 		applied = reclaim_pages(&folio_list);
 		break;
 	case MIG_MIGRATE_COLD:
-		applied = damon_pa_migrate_pages(&folio_list, mm,
-						 s->target_nid);
+		applied = damon_pa_migrate_pages(&folio_list, s->target_nid);
 		break;
 	default:
 		/* Unexpected migration mode. */
-- 
2.39.2

