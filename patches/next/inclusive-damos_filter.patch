From: SeongJae Park <sj@kernel.org>
Date: Sun, 22 Dec 2024 12:13:12 -0800
Subject: [PATCH] ==== inclusive damos_filter ====

mm/damon: extend DAMOS filters for inclusion of target memory

DAMOS fitlers are exclusive filters.  It only excludes memory of
specific types from the DAMOS action targets.  This has below problems.

First, the name is not explicitly explaining the behavior.  This
actually resulted in confusions[1] and works to improve the siaution[2],
including wordsmithing documentations and adding features to DAMON
user-space tool, damo.

Secondly, the functionality is restrictive.  This is especially
problematic when multiple filters need to be used.  For example,
building a DAMOS scheme that applies the action to memory that belongs
to cgroup A "or" cgroup B is impossible.  A workaroudn is using two
schemes, each filtering out memory that not belong to cgroup A and
cgroup B, respectively.  It is cumbersome, and makes control of
quota-like additional factors difficult.

Extend DAMOS filters to support not only excluding (blocking), but also
including (pass-through) behavior.  For the extension, add a new
damos_filter struct field called 'pass' for DAMON kernel API users.
Using the API, add a DAMON sysfs file of same name under DAMOS filter
sysfs directory, for DAMON user-space ABI users.  To prevent breaking
old users with a behavioral change, set the blocking as the default
behavior.

Note that DAMOS' default behavior without DAMOS filters is applying the
action to any memory.  And DAMOS filters work for only memory that
satisfies 'type' and 'matching'.  Hence installing pass filter without
any block filter after them makes no filter-behavioral change.

[1] https://lore.kernel.org/20240320165619.71478-1-sj@kernel.org
[2] https://git.kernel.org/sj/damo/c/b6a722c85ff91e5abe9dd47135e300df243da056

Changes from RFC v1
(https://lore.kernel.org/20241226221445.78433-1-sj@kernel.org)
- Fix encoding issue on the last patch

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 damon_meta_changes/RRsi2zLl | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 damon_meta_changes/RRsi2zLl

diff --git a/damon_meta_changes/RRsi2zLl b/damon_meta_changes/RRsi2zLl
new file mode 100644
index 000000000000..e69de29bb2d1
-- 
2.39.5

