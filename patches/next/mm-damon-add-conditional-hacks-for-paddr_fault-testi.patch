From: SeongJae Park <sj@kernel.org>
Date: Wed, 23 Jul 2025 21:52:08 -0700
Subject: [PATCH] mm/damon: add conditional hacks for paddr_fault testing

paddr_fault is still under early development.  It requires dirty hacks
for testing at the moment.  Add the hacks under a macro,
DAMON_PADDR_FAULT_TESTING.  The hacks are enabled if the macro is
defined as none-zero, and disabled by default.

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 include/linux/damon.h | 2 ++
 mm/damon/core.c       | 2 ++
 mm/mprotect.c         | 7 +++++++
 3 files changed, 11 insertions(+)

diff --git a/include/linux/damon.h b/include/linux/damon.h
index 20d978500abd..90bc4819db56 100644
--- a/include/linux/damon.h
+++ b/include/linux/damon.h
@@ -14,6 +14,8 @@
 #include <linux/types.h>
 #include <linux/random.h>
 
+#define DAMON_PADDR_FAULT_TESTING 0
+
 /* Minimal region size.  Every damon_region is aligned by this. */
 #define DAMON_MIN_REGION	PAGE_SIZE
 /* Max priority score for DAMON-based operation schemes */
diff --git a/mm/damon/core.c b/mm/damon/core.c
index ba037231db99..9a801c1faa8e 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -2382,7 +2382,9 @@ static void damon_merge_regions_of(struct damon_target *t, unsigned int thres,
 		if (r->nr_accesses != r->nr_accesses_bp / 10000) {
 			pr_err("nr_accesses (%u) != nr_accesses_bp (%u)\n",
 					r->nr_accesses, r->nr_accesses_bp);
+#if DAMON_PADDR_FAULT_TESTING == 0
 			BUG();
+#endif
 		}
 
 		if (prev && prev->ar.end == r->ar.start &&
diff --git a/mm/mprotect.c b/mm/mprotect.c
index 78bded7acf79..15af72b8e302 100644
--- a/mm/mprotect.c
+++ b/mm/mprotect.c
@@ -38,6 +38,9 @@
 #include <asm/tlbflush.h>
 #include <asm/tlb.h>
 
+/* For PADDR_FAULT testing only */
+#include <linux/damon.h>
+
 #include "internal.h"
 
 static bool maybe_change_pte_writable(struct vm_area_struct *vma, pte_t pte)
@@ -127,6 +130,10 @@ static bool prot_numa_skip(struct vm_area_struct *vma, unsigned long addr,
 	bool toptier;
 	int nid;
 
+#if DAMON_PADDR_FAULT_TESTING != 0
+	return false;
+#endif
+
 	/* Avoid TLB flush if possible */
 	if (pte_protnone(oldpte))
 		goto skip;
-- 
2.39.5

