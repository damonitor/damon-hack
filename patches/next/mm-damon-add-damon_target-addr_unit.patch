From: SeongJae Park <sj@kernel.org>
Date: Sat, 12 Apr 2025 12:24:36 -0700
Subject: [PATCH] mm/damon: add damon_target->addr_unit

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 include/linux/damon.h | 8 ++++++++
 mm/damon/core.c       | 1 +
 2 files changed, 9 insertions(+)

diff --git a/include/linux/damon.h b/include/linux/damon.h
index 9a18ad04403b..7af794cd7e2f 100644
--- a/include/linux/damon.h
+++ b/include/linux/damon.h
@@ -90,17 +90,25 @@ struct damon_region {
  * @pid:		The PID of the virtual address space to monitor.
  * @nr_regions:		Number of monitoring target regions of this target.
  * @regions_list:	Head of the monitoring target regions of this target.
+ * @addr_unit:		Scale factor for getting real address.
  * @list:		List head for siblings.
  *
  * Each monitoring context could have multiple targets.  For example, a context
  * for virtual memory address spaces could have multiple target processes.  The
  * @pid should be set for appropriate &struct damon_operations including the
  * virtual address spaces monitoring operations.
+ *
+ * If @addr_unit is given, relevant operations set layer can calculate the
+ * address for the given address space by calculating @addr_unit to DAMON core
+ * layer's address.  This is for cases that the given target address space
+ * cannot be fully covered with DAMON's core layer address type (unsigned
+ * long).  Arm32 with large physical address extension (LPAE) is an example.
  */
 struct damon_target {
 	struct pid *pid;
 	unsigned int nr_regions;
 	struct list_head regions_list;
+	unsigned long addr_unit;
 	struct list_head list;
 };
 
diff --git a/mm/damon/core.c b/mm/damon/core.c
index e5a2df6c6071..0148f37340bb 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -479,6 +479,7 @@ struct damon_target *damon_new_target(void)
 	t->pid = NULL;
 	t->nr_regions = 0;
 	INIT_LIST_HEAD(&t->regions_list);
+	t->addr_unit = 1;
 	INIT_LIST_HEAD(&t->list);
 
 	return t;
-- 
2.39.5

