From: SeongJae Park <sj@kernel.org>
Date: Sun, 1 Dec 2024 10:16:49 -0800
Subject: [PATCH] mm/damon/core: call DAMOS walk prep_fn() only once

DAMOS walk is per-context, but pre_fn can be called for each scheme.
Call it only once.

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 include/linux/damon.h | 1 +
 mm/damon/core.c       | 3 +++
 2 files changed, 4 insertions(+)

diff --git a/include/linux/damon.h b/include/linux/damon.h
index b1f0fff5603c..827971c9d7d6 100644
--- a/include/linux/damon.h
+++ b/include/linux/damon.h
@@ -388,6 +388,7 @@ struct damos_walk_control {
 	/* for waiting on walk completion from DAMON worker thrad. */
 	struct completion completion;
 	/* for saving if the walk is canceled. */
+	bool prep_done;
 	bool canceled;
 };
 
diff --git a/mm/damon/core.c b/mm/damon/core.c
index a0384c8ab308..9b587c756044 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -1447,7 +1447,10 @@ static void damos_walk_call_prep(struct damon_ctx *ctx)
 	mutex_unlock(&ctx->walk_control_lock);
 	if (!control)
 		return;
+	if (control->prep_done)
+		return;
 	control->prep_fn(control->data, ctx);
+	control->prep_done = true;
 }
 
 static void damos_walk_call_walk(struct damon_ctx *ctx, struct damon_target *t,
-- 
2.39.5

