From: SeongJae Park <sj@kernel.org>
Date: Fri, 4 Jul 2025 12:20:50 -0700
Subject: [PATCH] mm/damon/core: destroy targets when kdamond_fn() finish

When kdamond_fn() complete, the targets are kept.  Those are kept to let
callers do additional cleanups if they need.  There is no such
additional cleanups though.  DAMON sysfs interface deallocates those in
before_terminate() callback, to reduce unnecessary memory usage, for
[f]vaddr use case.  Just destroy the targets for every case in the core
layer.  This saves more memory and simplify the logic.

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/core.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/mm/damon/core.c b/mm/damon/core.c
index d3f3d9adc186..97659b49f64a 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -2832,6 +2832,7 @@ static int kdamond_fn(void *data)
 		running_exclusive_ctxs = false;
 	mutex_unlock(&damon_lock);
 
+	damon_destroy_targets(ctx);
 	return 0;
 }
 
-- 
2.39.5

