From: SeongJae Park <sj@kernel.org>
Date: Mon, 17 Feb 2025 11:06:03 -0800
Subject: [PATCH] mm/damon/core: expose damos_filter_for_ops() to DAMON kernel
 API clients

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 include/linux/damon.h | 1 +
 mm/damon/core.c       | 8 +++++++-
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/include/linux/damon.h b/include/linux/damon.h
index b7b77f095d45..9a503e920561 100644
--- a/include/linux/damon.h
+++ b/include/linux/damon.h
@@ -886,6 +886,7 @@ void damon_update_region_access_rate(struct damon_region *r, bool accessed,
 struct damos_filter *damos_new_filter(enum damos_filter_type type,
 		bool matching, bool allow);
 void damos_add_filter(struct damos *s, struct damos_filter *f);
+bool damos_filter_for_ops(struct damos_filter *f);
 void damos_destroy_filter(struct damos_filter *f);
 
 struct damos_quota_goal *damos_new_quota_goal(
diff --git a/mm/damon/core.c b/mm/damon/core.c
index d7d85a03a986..914d61d36b3e 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -281,7 +281,13 @@ struct damos_filter *damos_new_filter(enum damos_filter_type type,
 	return filter;
 }
 
-static bool damos_filter_for_ops(struct damos_filter *f)
+/**
+ * damos_filter_for_ops() - Return if the filter is ops-hndled one.
+ * @f:	filter to check if it is ops-handled or not.
+ *
+ * Return: true if @f needs to be handled by ops layer, false otherwise.
+ */
+bool damos_filter_for_ops(struct damos_filter *f)
 {
 	switch (f->type) {
 	case DAMOS_FILTER_TYPE_ADDR:
-- 
2.39.5

