From: SeongJae Park <sj@kernel.org>
Date: Mon, 16 Dec 2024 19:49:49 -0800
Subject: [PATCH] mm/damon/core: fixup sz_ops_filtr_passed API implementation

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/core.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/mm/damon/core.c b/mm/damon/core.c
index d21d02ee508d..7db7b9d53fdd 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -1546,8 +1546,7 @@ static void damos_apply_scheme(struct damon_ctx *c, struct damon_target *t,
 	unsigned long sz = damon_sz_region(r);
 	struct timespec64 begin, end;
 	unsigned long sz_applied = 0;
-	/* bytes of the region that excluded by ops-handling damos filters */
-	unsigned long sz_ops_filtered = 0;
+	unsigned long sz_ops_filter_passed = 0;
 	int err = 0;
 	/*
 	 * We plan to support multiple context per kdamond, as DAMON sysfs
@@ -1603,7 +1602,7 @@ static void damos_apply_scheme(struct damon_ctx *c, struct damon_target *t,
 			trace_damos_before_apply(cidx, sidx, tidx, r,
 					damon_nr_regions(t), do_trace);
 			sz_applied = c->ops.apply_scheme(c, t, r, s,
-					&sz_ops_filtered);
+					&sz_ops_filter_passed);
 		}
 		damos_walk_call_walk(c, t, r, s);
 		ktime_get_coarse_ts64(&end);
@@ -1619,7 +1618,7 @@ static void damos_apply_scheme(struct damon_ctx *c, struct damon_target *t,
 		r->age = 0;
 
 update_stat:
-	damos_update_stat(s, sz, sz_applied, sz_ops_filtered);
+	damos_update_stat(s, sz, sz_applied, sz_ops_filter_passed);
 }
 
 static void damon_do_apply_schemes(struct damon_ctx *c,
-- 
2.39.5

