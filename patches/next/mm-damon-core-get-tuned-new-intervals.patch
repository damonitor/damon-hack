From: SeongJae Park <sj@kernel.org>
Date: Tue, 21 Jan 2025 16:46:56 -0800
Subject: [PATCH] mm/damon/core: get tuned new intervals

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/core.c | 29 ++++++++++++++++++++++++++++-
 1 file changed, 28 insertions(+), 1 deletion(-)

diff --git a/mm/damon/core.c b/mm/damon/core.c
index 74af273fcb04..b8826497e2ec 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -1276,12 +1276,39 @@ static void kdamond_reset_aggregated(struct damon_ctx *c)
 	}
 }
 
+static unsigned long damon_feed_loop_next_input(unsigned long last_input,
+		unsigned long score);
+
 static void kdamond_tune_intervals(struct damon_ctx *c)
 {
+	struct damon_target *t;
+	unsigned long total_nr_regions;
+	unsigned long max_access_samples;
+	unsigned long target_access_samples;
+	unsigned long score_bp;
+	unsigned long adaptation_bp;
+	unsigned long sample_to_aggr_bp;
+	unsigned long new_aggr_interval, new_sample_interval;
+
 	if (!c->attrs.tune_interval_aggrs)
 		return;
 
-	/* todo: do the tuning */
+	total_nr_regions = 0;
+	damon_for_each_target(t, c)
+		total_nr_regions += damon_nr_regions(t);
+	max_access_samples = c->attrs.aggr_interval / c->attrs.sample_interval
+		* total_nr_regions;
+	target_access_samples = max_access_samples *
+		c->attrs.target_access_samples_bp / 10000;
+	score_bp = c->attrs.access_samples * 10000 / target_access_samples;
+	adaptation_bp = damon_feed_loop_next_input(10000, score_bp);
+	new_aggr_interval = max(c->attrs.aggr_interval * adaptation_bp / 10000,
+			c->attrs.max_aggr_interval);
+	sample_to_aggr_bp = c->attrs.sample_interval * 10000 /
+		c->attrs.aggr_interval;
+	new_sample_interval = new_aggr_interval * sample_to_aggr_bp / 10000;
+
+	/* todo: commit new intervals */
 
 	c->attrs.access_samples = 0;
 }
-- 
2.39.5

