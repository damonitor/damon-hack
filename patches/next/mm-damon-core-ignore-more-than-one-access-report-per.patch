From: SeongJae Park <sj@kernel.org>
Date: Sat, 26 Jul 2025 12:33:09 -0700
Subject: [PATCH] mm/damon/core: ignore more than one access report per
 sampling interval

Otherwise, nr_accesses_bp is corrupted, since moving sum average assumes
only one access or zero access per sampling interval.  Also, arguably
this makes more sense.

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/core.c | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/mm/damon/core.c b/mm/damon/core.c
index 3ced3e7ac3ad..668353554939 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -2565,7 +2565,6 @@ static void kdamond_apply_access_report(struct damon_access_report *report,
 		struct damon_target *t, struct damon_ctx *ctx)
 {
 	struct damon_region *r;
-	int i;
 	unsigned int max_avail_nr_accesses;
 
 	if (ctx->ops.eligible_report && !ctx->ops.eligible_report(report, t))
@@ -2580,12 +2579,8 @@ static void kdamond_apply_access_report(struct damon_access_report *report,
 			continue;
 		if (r->ar.end < report->addr + report->size)
 			continue;
-		/* TODO: optimize out loop */
-		for (i = 0; i < report->nr_accesses; i++) {
-			if (r->nr_accesses == max_avail_nr_accesses)
-				break;
+		if (!r->access_reported)
 			damon_update_region_access_rate(r, true, &ctx->attrs);
-		}
 		r->access_reported = true;
 	}
 }
-- 
2.39.5

