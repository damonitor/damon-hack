From: SeongJae Park <sj@kernel.org>
Date: Sat, 28 Jun 2025 13:52:26 -0700
Subject: [PATCH] mm/damon/core: implement damon_initialized() function

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 include/linux/damon.h | 1 +
 mm/damon/core.c       | 6 +++++-
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/include/linux/damon.h b/include/linux/damon.h
index ec8716292c09..7a4d7196cc75 100644
--- a/include/linux/damon.h
+++ b/include/linux/damon.h
@@ -936,6 +936,7 @@ static inline unsigned int damon_max_nr_accesses(const struct damon_attrs *attrs
 }
 
 
+bool damon_initialized(void);
 int damon_start(struct damon_ctx **ctxs, int nr_ctxs, bool exclusive);
 int damon_stop(struct damon_ctx **ctxs, int nr_ctxs);
 bool damon_is_running(struct damon_ctx *ctx);
diff --git a/mm/damon/core.c b/mm/damon/core.c
index 7aeb3f24aae8..79aedcd64eec 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -2855,6 +2855,11 @@ void damon_update_region_access_rate(struct damon_region *r, bool accessed,
 		r->nr_accesses++;
 }
 
+bool damon_initialized(void)
+{
+	return damon_region_cache != NULL;
+}
+
 static int __init damon_init(void)
 {
 	damon_region_cache = KMEM_CACHE(damon_region, 0);
@@ -2862,7 +2867,6 @@ static int __init damon_init(void)
 		pr_err("creating damon_region_cache fails\n");
 		return -ENOMEM;
 	}
-
 	return 0;
 }
 
-- 
2.39.5

