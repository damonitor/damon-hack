From: SeongJae Park <sj@kernel.org>
Date: Sun, 7 Sep 2025 20:54:05 -0700
Subject: [PATCH] mm/damon/core: implement damos_migrate_dests alloc function

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 include/linux/damon.h |  2 ++
 mm/damon/core.c       | 17 +++++++++++++++++
 2 files changed, 19 insertions(+)

diff --git a/include/linux/damon.h b/include/linux/damon.h
index f09133c591c6..26f7548e5689 100644
--- a/include/linux/damon.h
+++ b/include/linux/damon.h
@@ -998,6 +998,8 @@ struct damos_quota_goal *damos_new_quota_goal(
 void damos_add_quota_goal(struct damos_quota *q, struct damos_quota_goal *g);
 void damos_destroy_quota_goal(struct damos_quota_goal *goal);
 
+int damos_alloc_migrate_dests(struct damos_migrate_dests *dests, int nr_dests);
+
 struct damos *damon_new_scheme(struct damos_access_pattern *pattern,
 			enum damos_action action,
 			unsigned long apply_interval_us,
diff --git a/mm/damon/core.c b/mm/damon/core.c
index 00b61afbb8ca..025b243508c6 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -379,6 +379,23 @@ void damos_destroy_quota_goal(struct damos_quota_goal *g)
 	damos_free_quota_goal(g);
 }
 
+int damos_alloc_migrate_dests(struct damos_migrate_dests *dests, int nr_dests)
+{
+	dests->node_id_arr = kmalloc_array(nr_dests,
+			sizeof(*dests->node_id_arr), GFP_KERNEL);
+	if (!dests->node_id_arr)
+		return -ENOMEM;
+	dests->weight_arr = kmalloc_array(nr_dests, sizeof(*dests->weight_arr),
+			GFP_KERNEL);
+	if (!dests->weight_arr) {
+		kfree(dests->node_id_arr);
+		dests->node_id_arr = NULL;
+		return -ENOMEM;
+	}
+	dests->nr_dests = nr_dests;
+	return 0;
+}
+
 /* initialize fields of @quota that normally API users wouldn't set */
 static struct damos_quota *damos_quota_init(struct damos_quota *quota)
 {
-- 
2.39.5

