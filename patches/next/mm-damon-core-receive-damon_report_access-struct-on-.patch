From: SeongJae Park <sj@kernel.org>
Date: Sun, 25 May 2025 14:02:19 -0700
Subject: [PATCH] mm/damon/core: receive damon_report_access struct on
 damon_report_access()

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 include/linux/damon.h |  9 +++++++--
 mm/damon/core.c       | 19 +++----------------
 2 files changed, 10 insertions(+), 18 deletions(-)

diff --git a/include/linux/damon.h b/include/linux/damon.h
index 40d49890b2d7..378b0f06c689 100644
--- a/include/linux/damon.h
+++ b/include/linux/damon.h
@@ -106,6 +106,12 @@ struct damon_target {
 
 /**
  * struct damon_access_report - Represent single acces report information.
+ * @pid:		The PID of the virtual address space of the address.
+ * 			NULL if it is of the physical address.
+ * @addr:		The start address of the reporting region.
+ * @size:		The size of the reporting region.
+ * @nr_accesses:	Number of detected accesses to the region.
+ * @node_id:		NUMA node that made the accesses.
  */
 struct damon_access_report {
 	struct pid *pid;
@@ -949,8 +955,7 @@ int damon_stop(struct damon_ctx **ctxs, int nr_ctxs);
 int damon_call(struct damon_ctx *ctx, struct damon_call_control *control);
 int damos_walk(struct damon_ctx *ctx, struct damos_walk_control *control);
 
-void damon_report_access(struct pid *pid, unsigned long addr,
-		unsigned long size, int nr_accesses, int node_id);
+void damon_report_access(struct damon_access_report *report);
 
 int damon_set_region_biggest_system_ram_default(struct damon_target *t,
 				unsigned long *start, unsigned long *end);
diff --git a/mm/damon/core.c b/mm/damon/core.c
index 98fb2075931a..16f7fe89759a 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -1408,34 +1408,21 @@ int damos_walk(struct damon_ctx *ctx, struct damos_walk_control *control)
 
 /**
  * damon_report_access() - Report identified access events to DAMON.
- * @pid:		The PID of the virtual addres sspace of the address.
- *			NULL if it is of the physical address.
- * @addr:		The start address of the reporting region.
- * @size:		The size of the reporting region.
- * @nr_accesses:	Number of detected accesses to the region.
- * @node_id:		NUMA node that made the accesses.
+ * @report:	The reporting access information.
  *
  * Report access events to DAMON.
  *
  * Context: May sleep.
  * TODO: allow any context?
  */
-void damon_report_access(struct pid *pid, unsigned long addr,
-		unsigned long size, int nr_accesses, int node_id)
+void damon_report_access(struct damon_access_report *report)
 {
-	struct damon_access_report *report;
-
 	/* silently fail for races */
 	if (!mutex_trylock(&damon_access_reports_lock))
 		return;
-	report = &damon_access_reports[damon_access_reports_len++];
+	damon_access_reports[damon_access_reports_len++] = *report;
 	if (damon_access_reports_len == DAMON_ACCESS_REPORTS_CAP)
 		damon_access_reports_len = 0;
-	report->pid = pid;
-	report->addr = addr;
-	report->size = size;
-	report->nr_accesses = nr_accesses;
-	report->node_id = node_id;
 	mutex_unlock(&damon_access_reports_lock);
 }
 
-- 
2.39.5

