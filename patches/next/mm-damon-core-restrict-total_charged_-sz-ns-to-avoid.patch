From: SeongJae Park <sj@kernel.org>
Date: Wed, 3 Sep 2025 18:08:43 -0700
Subject: [PATCH] mm/damon/core: restrict total_charged_{sz,ns} to avoid
 overflows

When a scheme having a time quota is applied, and if total_charged_sz or
total_charged_ns are overflowed, the throughput that calculated using
the two counters can be unexpectedly small or high, respectively.  As a
result, users can see the scheme working unexpectedly slow or fast.  It
is unlikely in 64 bit, but can happen in 32 bit.  Avoid the problem by
restricting the counters to use only up to half of their max value.

Fixes: 1cd243030059 ("mm/damon/schemes: implement time quota") # 5.16.x
Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/core.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/mm/damon/core.c b/mm/damon/core.c
index 1701bc003f0c..5f0172598aaf 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -2325,6 +2325,11 @@ static void damos_adjust_quota(struct damon_ctx *c, struct damos *s)
 		if (quota->esz && quota->charged_sz >= quota->esz)
 			s->stat.qt_exceeds++;
 		quota->total_charged_sz += quota->charged_sz;
+		if (quota->total_charged_sz > ULONG_MAX / 2 ||
+				quota->total_charged_ns > ULONG_MAX / 2) {
+			quota->total_charged_sz /= 2;
+			quota->total_charged_ns /= 2;
+		}
 		quota->charged_from = jiffies;
 		quota->charged_sz = 0;
 		if (trace_damos_esz_enabled())
-- 
2.47.3

