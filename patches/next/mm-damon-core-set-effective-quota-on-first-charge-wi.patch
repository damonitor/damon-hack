From: SeongJae Park <sj@kernel.org>
Date: Wed, 3 Sep 2025 18:30:13 -0700
Subject: [PATCH] mm/damon/core: set effective quota on first charge window

The effective quota of a scheme is initialized zero, which means there
is no quota.  It is set based on user-specified time/quota/quota goals.
But the later value set is done only from the second charge window.  As
a result, a scheme having user-specified quota can work as not having
the quota (unexpectedly fast) for the first charge window.  In a
practical and commont use cases where the quota interval is not too
long, and the scheme's target access pattern is restrictive, the issue
should be modest, though.  Fix the problem by setting esz on the first
charge window.

Fixes: 1cd243030059 ("mm/damon/schemes: implement time quota") # 5.16.x
Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/core.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/mm/damon/core.c b/mm/damon/core.c
index 2a1aa6c85237..efb503c2726d 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -2319,8 +2319,10 @@ static void damos_adjust_quota(struct damon_ctx *c, struct damos *s)
 		return;
 
 	/* First charge window */
-	if (!quota->total_charged_sz && !quota->charged_from)
+	if (!quota->total_charged_sz && !quota->charged_from) {
 		quota->charged_from = jiffies;
+		damos_set_effective_quota(quota);
+	}
 
 	/* New charge window starts */
 	if (time_after_eq(jiffies, quota->charged_from +
-- 
2.39.5

