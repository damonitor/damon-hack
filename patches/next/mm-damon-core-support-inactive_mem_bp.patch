From: SeongJae Park <sj@kernel.org>
Date: Sun, 22 Jun 2025 12:29:48 -0700
Subject: [PATCH] mm/damon/core: support inactive_mem_bp

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/core.c | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/mm/damon/core.c b/mm/damon/core.c
index 145a5fed3bd1..c708b8734e0f 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -2030,16 +2030,19 @@ static __kernel_ulong_t damos_get_node_mem_bp(
 /*
  * Returns LRU-active memory to LRU-inactive memory size ratio.
  */
-static unsigned int damos_get_active_mem_bp(void)
+static unsigned int damos_get_in_active_mem_bp(bool active_ratio)
 {
-	unsigned long active, inactive;
+	unsigned long active, inactive, total;
 
 	/* This should align with /proc/meminfo output */
 	active = global_node_page_state(NR_LRU_BASE + LRU_ACTIVE_ANON) +
 		global_node_page_state(NR_LRU_BASE + LRU_ACTIVE_FILE);
 	inactive = global_node_page_state(NR_LRU_BASE + LRU_INACTIVE_ANON) +
 		global_node_page_state(NR_LRU_BASE + LRU_INACTIVE_FILE);
-	return active * 10000 / (active + inactive);
+	total = active + inactive;
+	if (active_ratio)
+		return active * 10000 / total;
+	return inactive * 10000 / total;
 }
 
 static void damos_set_quota_goal_current_value(struct damos_quota_goal *goal)
@@ -2061,7 +2064,9 @@ static void damos_set_quota_goal_current_value(struct damos_quota_goal *goal)
 		goal->current_value = damos_get_node_mem_bp(goal);
 		break;
 	case DAMOS_QUOTA_ACTIVE_MEM_BP:
-		goal->current_value = damos_get_active_mem_bp();
+	case DAMOS_QUOTA_INACTIVE_MEM_BP:
+		goal->current_value = damos_get_in_active_mem_bp(
+				goal->metric == DAMOS_QUOTA_ACTIVE_MEM_BP);
 		break;
 	default:
 		break;
-- 
2.39.5

