From: SeongJae Park <sj@kernel.org>
Date: Sun, 16 Mar 2025 13:18:14 -0700
Subject: [PATCH] mm/damon/core: warn and fix nr_accesses[_bp] corruption

For a bug such as double aggergation reset[1], ->nr_accesses and/or
->nr_accesses_bp could be corrupted.  Find and warn the case for future
investigation.  To keep the monitoring properly continues from the next
aggregation, fix the corruption together.

[1] https://lore.kernel.org/20250302214145.356806-1-sj@kernel.org

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/core.c | 23 ++++++++++++++---------
 1 file changed, 14 insertions(+), 9 deletions(-)

diff --git a/mm/damon/core.c b/mm/damon/core.c
index ef025bdcb1ea..dbbf4ad3c955 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -1460,6 +1460,19 @@ void damon_report_access(struct pid *pid, unsigned long addr,
 	mutex_unlock(&damon_access_reports_lock);
 }
 
+/*
+ * Warn and fix corrupted ->nr_accesses[_bp] for investigations and preventing
+ * the problem being propagated.
+ */
+static void damon_warn_fix_nr_accesses_corruption(struct damon_region *r)
+{
+	if (r->nr_accesses_bp == r->nr_accesses * 10000)
+		return;
+	WARN_ONCE(true, "invalid nr_accesses_bp at reset: %u %u\n",
+			r->nr_accesses_bp, r->nr_accesses);
+	r->nr_accesses_bp = r->nr_accesses * 10000;
+}
+
 /*
  * Reset the aggregated monitoring results ('nr_accesses' of each region).
  */
@@ -1473,17 +1486,9 @@ static void kdamond_reset_aggregated(struct damon_ctx *c)
 
 		damon_for_each_region(r, t) {
 			trace_damon_aggregated(ti, r, damon_nr_regions(t));
+			damon_warn_fix_nr_accesses_corruption(r);
 			r->last_nr_accesses = r->nr_accesses;
 			r->nr_accesses = 0;
-			if (r->nr_accesses_bp != r->last_nr_accesses * 10000) {
-				pr_info("reset time invalid region found!\n");
-				pr_info("nr_accesses_bp %u last_nr_acceses %u\n",
-						r->nr_accesses_bp, r->last_nr_accesses);
-				pr_info("passed_sis %lu next_aggregation_sis %lu\n",
-						c->passed_sample_intervals,
-						c->next_aggregation_sis);
-				BUG();
-			}
 		}
 		ti++;
 	}
-- 
2.39.5

