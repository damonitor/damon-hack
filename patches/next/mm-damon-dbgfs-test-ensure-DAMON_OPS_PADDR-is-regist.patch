From 6cc79c0e625ee70adc0a7e7dfa6c5c37d07d0d7a Mon Sep 17 00:00:00 2001
From: SeongJae Park <sj@kernel.org>
Date: Tue, 16 Jul 2024 18:00:32 -0700
Subject: [PATCH] mm/damon/dbgfs-test: ensure DAMON_OPS_PADDR is registered on
 dbgfs_set_targets() test

The test assumes DAMON_OPS_PADDR is registered, while it is not when
CONFIG_DAMON_PADDR is unset.  Ensure the situation by registering a fake
ops.

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/dbgfs-test.h | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/mm/damon/dbgfs-test.h b/mm/damon/dbgfs-test.h
index 2d85217f5ba4..3b42cb46d231 100644
--- a/mm/damon/dbgfs-test.h
+++ b/mm/damon/dbgfs-test.h
@@ -72,6 +72,18 @@ static void damon_dbgfs_test_set_targets(struct kunit *test)
 {
 	struct damon_ctx *ctx = dbgfs_new_ctx();
 	char buf[64];
+	struct damon_operations ops = {.id = DAMON_OPS_PADDR};
+
+	/*
+	 * ensure DAMON_OPS_PADDR ops is registered
+	 *
+	 * Actually this is required only when CONFIG_DAMON_PADDR is unset.
+	 * And in the case, the ops should be unregistered.  However, we don't
+	 * have the unregister function.  The internal data structure is also
+	 * not exported.  Fortunately, this is just a test.  Keep the internal
+	 * data structure has the fake ops.
+	 */
+	damon_register_ops(&ops);
 
 	/* Make DAMON consider target has no pid */
 	damon_select_ops(ctx, DAMON_OPS_PADDR);
-- 
2.39.2

