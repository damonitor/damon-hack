From: SeongJae Park <sj@kernel.org>
Date: Mon, 16 Dec 2024 11:46:54 -0800
Subject: [PATCH] mm/damon: document damon_region->damos_filtered_out

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 include/linux/damon.h | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/include/linux/damon.h b/include/linux/damon.h
index b41dd0b4b798..9a27e20b9738 100644
--- a/include/linux/damon.h
+++ b/include/linux/damon.h
@@ -44,6 +44,7 @@ struct damon_addr_range {
  *			each sampling interval.
  * @list:		List head for siblings.
  * @age:		Age of this region.
+ * @damos_filtered_out:	Last DAMOS filter-matched (excluded) bytes.
  *
  * @nr_accesses is reset to zero for every &damon_attrs->aggr_interval and be
  * increased for every &damon_attrs->sample_interval if an access to the region
@@ -62,6 +63,11 @@ struct damon_addr_range {
  * to zero again if the access frequency is significantly changed.  If two
  * regions are merged into a new region, both @nr_accesses and @age of the new
  * region are set as region size-weighted average of those of the two regions.
+ *
+ * @damos_filtered_out is the size of bytes in the region that was matched to a
+ * DAMOS filter that handled by operation set (&struct damon_operations), on
+ * the last time.  For consistent reads, this should be read just after each
+ * scheme is applied.  damos_walk() can be useful for that.
  */
 struct damon_region {
 	struct damon_addr_range ar;
@@ -73,6 +79,7 @@ struct damon_region {
 	unsigned int age;
 /* private: Internal value for age calculation. */
 	unsigned int last_nr_accesses;
+/* public */
 	unsigned long damos_filtered_out;
 };
 
-- 
2.39.5

