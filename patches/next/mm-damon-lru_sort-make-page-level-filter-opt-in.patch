From: SeongJae Park <sj@kernel.org>
Date: Sun, 22 Jun 2025 13:04:06 -0700
Subject: [PATCH] mm/damon/lru_sort: make page level filter opt-in

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/lru_sort.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/mm/damon/lru_sort.c b/mm/damon/lru_sort.c
index 693b8d95b42b..3ccde23a8566 100644
--- a/mm/damon/lru_sort.c
+++ b/mm/damon/lru_sort.c
@@ -41,6 +41,21 @@ static bool enabled __read_mostly;
 static bool commit_inputs __read_mostly;
 module_param(commit_inputs, bool, 0600);
 
+/*
+ * Filter [none-]young pages accordingly for LRU [de]prioritizations.
+ *
+ * If this is set, check page level access (youngness) once again before each
+ * LRU [de]prioritization operation.  LRU prioritization operation is skipped
+ * if the page has not accessed since the last check (not young).  LRU
+ * deprioritization operation is skipped if the page has accessed since the
+ * last check (young).  The feature is enabled or disabled if this parameter is
+ * set as ``Y`` or ``N``, respectively.
+ *
+ * Disabled by default.
+ */
+static bool filter_young_pages __read_mostly;
+module_param(filter_young_pages, bool, 0600);
+
 /*
  * Access frequency threshold for hot memory regions identification in permil.
  *
@@ -191,6 +206,9 @@ static int damon_lru_sort_add_filters(struct damos *hot_scheme,
 {
 	struct damos_filter *filter;
 
+	if (!filter_young_pages)
+		return 0;
+
 	/* disallow prioritizing not-young pages */
 	filter = damos_new_filter(DAMOS_FILTER_TYPE_YOUNG, false, false);
 	if (!filter)
-- 
2.39.5

