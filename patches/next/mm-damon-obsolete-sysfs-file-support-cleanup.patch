From: SeongJae Park <sj@kernel.org>
Date: Thu, 16 Oct 2025 13:22:44 -0700
Subject: [PATCH] mm/damon: obsolete sysfs file support cleanup

The field name is weird.  Add more docoumentation.  Mark
damon_target->obsolete as public, since it is being used by sysfs.

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 include/linux/damon.h |  9 ++++++---
 mm/damon/core.c       | 10 +++++++---
 mm/damon/sysfs.c      |  2 +-
 3 files changed, 14 insertions(+), 7 deletions(-)

diff --git a/include/linux/damon.h b/include/linux/damon.h
index f14c305ed889..8a7b45b9e40d 100644
--- a/include/linux/damon.h
+++ b/include/linux/damon.h
@@ -92,20 +92,23 @@ struct damon_region {
  * @nr_regions:		Number of monitoring target regions of this target.
  * @regions_list:	Head of the monitoring target regions of this target.
  * @list:		List head for siblings.
+ * @obsolete:		Whether the commit destination target is obsolete.
  *
  * Each monitoring context could have multiple targets.  For example, a context
  * for virtual memory address spaces could have multiple target processes.  The
  * @pid should be set for appropriate &struct damon_operations including the
  * virtual address spaces monitoring operations.
+ *
+ * @obsolte is used only for damon_commit_targets() source targets, to specify
+ * the matching destination targets are obsolte.  Read damon_commit_targets()
+ * to see how it is handled.
  */
 struct damon_target {
 	struct pid *pid;
 	unsigned int nr_regions;
 	struct list_head regions_list;
 	struct list_head list;
-/* private: Interval use only */
-	/* damon_commit_targets() will remove matching dst target */
-	bool remove_on_commit;
+	bool obsolete;
 };
 
 /**
diff --git a/mm/damon/core.c b/mm/damon/core.c
index 4d185ea23252..3242a9573db0 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -492,7 +492,7 @@ struct damon_target *damon_new_target(void)
 	t->nr_regions = 0;
 	INIT_LIST_HEAD(&t->regions_list);
 	INIT_LIST_HEAD(&t->list);
-	t->remove_on_commit = false;
+	t->obsolete = false;
 
 	return t;
 }
@@ -1214,7 +1214,11 @@ static int damon_commit_targets(
 
 	damon_for_each_target_safe(dst_target, next, dst) {
 		src_target = damon_nth_target(i++, src);
-		if (src_target && !src_target->remove_on_commit) {
+		/*
+		 * If src target is obsolete, do not commit the parameters to
+		 * the dst target, and further remove the dst target.
+		 */
+		if (src_target && !src_target->obsolete) {
 			err = damon_commit_target(
 					dst_target, damon_target_has_pid(dst),
 					src_target, damon_target_has_pid(src),
@@ -1238,7 +1242,7 @@ static int damon_commit_targets(
 		if (j++ < i)
 			continue;
 		/* target to remove has no matching dst */
-		if (src_target->remove_on_commit)
+		if (src_target->obsolete)
 			return -EINVAL;
 		new_target = damon_new_target();
 		if (!new_target)
diff --git a/mm/damon/sysfs.c b/mm/damon/sysfs.c
index 5d895154bcfa..26bc658ad873 100644
--- a/mm/damon/sysfs.c
+++ b/mm/damon/sysfs.c
@@ -1602,7 +1602,7 @@ static int damon_sysfs_add_target(struct damon_sysfs_target *sys_target,
 			/* caller will destroy targets */
 			return -EINVAL;
 	}
-	t->remove_on_commit = sys_target->obsolete;
+	t->obsolete = sys_target->obsolete;
 	return damon_sysfs_set_regions(t, sys_target->regions, ctx->min_sz_region);
 }
 
-- 
2.47.3

