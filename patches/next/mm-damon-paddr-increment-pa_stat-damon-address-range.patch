From: Usama Arif <usamaarif642@gmail.com>
Date: Mon, 13 Jan 2025 19:07:38 +0000
Subject: [PATCH] mm/damon/paddr: increment pa_stat damon address range by
 folio size

This is to avoid going through all the pages in a folio.
For folio_size > PAGE_SIZE, damon_get_folio will return NULL
for tail pages, so the for loop in those instances will be a
nop. Have a more efficient loop by just incrementing the
address by folio_size.

Signed-off-by: Usama Arif <usamaarif642@gmail.com>
Signed-off-by: SeongJae Park <sj@kernel.org>
Reviewed-by: SeongJae Park <sj@kernel.org>
Link: https://patch.msgid.link/20250113190738.1156381-1-usamaarif642@gmail.com
---
 mm/damon/paddr.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/mm/damon/paddr.c b/mm/damon/paddr.c
index 6b4397de4199..bd8cfe10121b 100644
--- a/mm/damon/paddr.c
+++ b/mm/damon/paddr.c
@@ -504,17 +504,21 @@ static unsigned long damon_pa_stat(struct damon_region *r, struct damos *s,
 	if (!damon_pa_scheme_has_filter(s))
 		return 0;
 
-	for (addr = r->ar.start; addr < r->ar.end; addr += PAGE_SIZE) {
+	addr = r->ar.start;
+	while (addr < r->ar.end) {
 		struct folio *folio = damon_get_folio(PHYS_PFN(addr));
 
-		if (!folio)
+		if (!folio) {
+			addr += PAGE_SIZE;
 			continue;
+		}
 
 		if (damos_pa_filter_out(s, folio))
 			goto put_folio;
 		else
 			*sz_filter_passed += folio_size(folio);
 put_folio:
+		addr += folio_size(folio);
 		folio_put(folio);
 	}
 	return 0;
-- 
2.39.5

