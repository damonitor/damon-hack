From: SeongJae Park <sj@kernel.org>
Date: Sun, 11 May 2025 13:58:41 -0700
Subject: [PATCH] mm/damon/stat: rename enable to enabled

For consistency with other non-sample DAMON modules.

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/stat.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/mm/damon/stat.c b/mm/damon/stat.c
index 0577b15c6e3a..f6ecf651c763 100644
--- a/mm/damon/stat.c
+++ b/mm/damon/stat.c
@@ -24,9 +24,9 @@ static const struct kernel_param_ops enable_param_ops = {
 	.get = param_get_bool,
 };
 
-static bool enable __read_mostly;
-module_param_cb(enable, &enable_param_ops, &enable, 0600);
-MODULE_PARM_DESC(enable, "Enable of disable DAMON_STAT");
+static bool enabled __read_mostly;
+module_param_cb(enabled, &enable_param_ops, &enabled, 0600);
+MODULE_PARM_DESC(enabled, "Enable of disable DAMON_STAT");
 
 static unsigned long estimated_memory_bandwidth __read_mostly = 0;
 module_param(estimated_memory_bandwidth, ulong, 0400);
@@ -190,14 +190,14 @@ static bool damon_stat_init_called = false;
 static int damon_stat_enable_store(
 		const char *val, const struct kernel_param *kp)
 {
-	bool enabled = enable;
+	bool is_enabled = enabled;
 	int err;
 
-	err = kstrtobool(val, &enable);
+	err = kstrtobool(val, &enabled);
 	if (err)
 		return err;
 
-	if (enable == enabled)
+	if (is_enabled == enabled)
 		return 0;
 
 	if (!damon_stat_init_called)
@@ -207,7 +207,7 @@ static int damon_stat_enable_store(
 		 */
 		return 0;
 
-	if (enable)
+	if (enabled)
 		return damon_stat_start();
 	damon_stat_stop();
 	return 0;
@@ -220,7 +220,7 @@ static int __init damon_stat_init(void)
 	damon_stat_init_called = true;
 
 	/* probably set via command line */
-	if (enable)
+	if (enabled)
 		err = damon_stat_start();
 	return err;
 }
-- 
2.39.5

