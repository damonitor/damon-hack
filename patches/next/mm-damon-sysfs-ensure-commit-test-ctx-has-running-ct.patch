From: SeongJae Park <sj@kernel.org>
Date: Sat, 11 Oct 2025 11:52:09 -0700
Subject: [PATCH] mm/damon/sysfs: ensure commit test ctx has running ctx
 parameters

In future, committing some parameters to a damon_ctx could fail
depending on what current parameters are.  Specifically, damon_target
objects committing could fail for remove_on_commit set targets that have
no matching destination on the running context.

damon_sysfs_commit_input() uses a new, nearly empty damon_ctx as a test
context.  For the abovely mentioned case, test will always fail since
there is not matcing destination target.  Future parameters that can
fail committing depend on current parameters would also have same issue.

Commit the currently running context parameters to the test context, to
ensure the test context has parameters that same to the currently
running one.

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/damon/sysfs.c | 22 +++++++++++++++++++++-
 1 file changed, 21 insertions(+), 1 deletion(-)

diff --git a/mm/damon/sysfs.c b/mm/damon/sysfs.c
index 50681088ecd7..d3c18cf299c6 100644
--- a/mm/damon/sysfs.c
+++ b/mm/damon/sysfs.c
@@ -1709,6 +1709,26 @@ static int damon_sysfs_apply_inputs(struct damon_ctx *ctx,
 static struct damon_ctx *damon_sysfs_build_ctx(
 		struct damon_sysfs_context *sys_ctx);
 
+/*
+ * Return a new damon_ctx for testing new parameters to commit.
+ */
+static struct damon_ctx *damon_sysfs_new_test_ctx(
+		struct damon_ctx *running_ctx)
+{
+	struct damon_ctx *test_ctx;
+	int err;
+
+	test_ctx = damon_new_ctx();
+	if (!test_ctx)
+		return NULL;
+	err = damon_commit_ctx(test_ctx, running_ctx);
+	if (err) {
+		damon_destroy_ctx(test_ctx);
+		return NULL;
+	}
+	return test_ctx;
+}
+
 /*
  * damon_sysfs_commit_input() - Commit user inputs to a running kdamond.
  * @kdamond:	The kobject wrapper for the associated kdamond.
@@ -1730,7 +1750,7 @@ static int damon_sysfs_commit_input(void *data)
 	param_ctx = damon_sysfs_build_ctx(kdamond->contexts->contexts_arr[0]);
 	if (IS_ERR(param_ctx))
 		return PTR_ERR(param_ctx);
-	test_ctx = damon_new_ctx();
+	test_ctx = damon_sysfs_new_test_ctx(kdamond->damon_ctx);
 	if (!test_ctx)
 		return -ENOMEM;
 	/* todo: commit kdamond->damon_ctx to test_ctx */
-- 
2.47.3

