From bdcaa7bd7fcb5494eb7182468b0a3b57e0c8672d Mon Sep 17 00:00:00 2001
From: SeongJae Park <sj@kernel.org>
Date: Sun, 9 Jun 2024 10:55:05 -0700
Subject: [PATCH] mm/damon/sysfs-schemes: commit only quota goals for goals
 update

For 'commit_schemes_quota_goals' command, sysfs-schemes create a zero-ed
quota, update goals with latest user input, and then commit the quota.
That updates not only the goals but also the quota.  As a result, the
time/spze quota is reset.  Commit only goals.

Maybe the bug has made the odd results of plrus_auto and pdarc_auto from
last two daily test results[1,2].

[1] https://damonitor.github.io/test/result/perf/after_merge/6.10.0-rc1-mm-unstable-damon+/2024-06-08-09-56-35/report/html/index.html
[2] https://damonitor.github.io/test/result/perf/after_merge/6.10.0-rc1-mm-unstable-damon+/2024-06-09-09-01-00/report/html/index.html

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 include/linux/damon.h    | 2 +-
 mm/damon/core.c          | 5 ++---
 mm/damon/sysfs-schemes.c | 2 +-
 3 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/include/linux/damon.h b/include/linux/damon.h
index bff04a7bfbca..fcccaa9b9d54 100644
--- a/include/linux/damon.h
+++ b/include/linux/damon.h
@@ -773,7 +773,7 @@ struct damos *damon_new_scheme(struct damos_access_pattern *pattern,
 			int target_nid);
 void damon_add_scheme(struct damon_ctx *ctx, struct damos *s);
 void damon_destroy_scheme(struct damos *s);
-int damos_commit_quota(struct damos_quota *dst, struct damos_quota *src);
+int damos_commit_quota_goals(struct damos_quota *dst, struct damos_quota *src);
 
 struct damon_target *damon_new_target(void);
 void damon_add_target(struct damon_ctx *ctx, struct damon_target *t);
diff --git a/mm/damon/core.c b/mm/damon/core.c
index 1dbca1d62a1c..97c4b2de5828 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -718,8 +718,7 @@ static void damos_commit_quota_goal(
 	/* keep last_psi_total as is, since it will be updated in next cycle */
 }
 
-static int damos_commit_quota_goals(
-		struct damos_quota *dst, struct damos_quota *src)
+int damos_commit_quota_goals(struct damos_quota *dst, struct damos_quota *src)
 {
 	struct damos_quota_goal *dst_goal, *next, *src_goal, *new_goal;
 	int i = 0, j = 0;
@@ -743,7 +742,7 @@ static int damos_commit_quota_goals(
 	return 0;
 }
 
-int damos_commit_quota(struct damos_quota *dst, struct damos_quota *src)
+static int damos_commit_quota(struct damos_quota *dst, struct damos_quota *src)
 {
 	int err;
 
diff --git a/mm/damon/sysfs-schemes.c b/mm/damon/sysfs-schemes.c
index c70ed78f761c..6cc976b8e363 100644
--- a/mm/damon/sysfs-schemes.c
+++ b/mm/damon/sysfs-schemes.c
@@ -2001,7 +2001,7 @@ int damos_sysfs_set_quota_scores(struct damon_sysfs_schemes *sysfs_schemes,
 				damos_destroy_quota_goal(g);
 			return err;
 		}
-		err = damos_commit_quota(&scheme->quota, &quota);
+		err = damos_commit_quota_goals(&scheme->quota, &quota);
 		damos_for_each_quota_goal_safe(g, g_next, &quota)
 			damos_destroy_quota_goal(g);
 		if (err)
-- 
2.39.2

