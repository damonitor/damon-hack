From: Andrew Morton <akpm@linux-foundation.org>
Date: Tue, 11 Feb 2025 15:55:07 -0800
Subject: [PATCH] 
 mm-madvise-split-out-mmap-locking-operations-for-madvise-fix-checkpatch-fixes

WARNING: suspect code indent for conditional statements (8, 12)
#57: FILE: mm/madvise.c:1598:
+	if (is_memory_failure(behavior))
+	    return 0;

WARNING: Statements should start on a tabstop
#58: FILE: mm/madvise.c:1599:
+	    return 0;

WARNING: suspect code indent for conditional statements (8, 12)
#72: FILE: mm/madvise.c:1612:
+	if (is_memory_failure(behavior))
+	    return;

WARNING: Statements should start on a tabstop
#73: FILE: mm/madvise.c:1613:
+	    return;

Please run checkpatch prior to sending patches

Cc: Lorenzo Stoakes <lorenzo.stoakes@oracle.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 mm/madvise.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/mm/madvise.c b/mm/madvise.c
index 6dd906828001..fa5dae5a7723 100644
--- a/mm/madvise.c
+++ b/mm/madvise.c
@@ -1596,7 +1596,7 @@ static bool is_memory_failure(int behavior)
 static int madvise_lock(struct mm_struct *mm, int behavior)
 {
 	if (is_memory_failure(behavior))
-	    return 0;
+		return 0;
 
 	if (madvise_need_mmap_write(behavior)) {
 		if (mmap_write_lock_killable(mm))
@@ -1610,7 +1610,7 @@ static int madvise_lock(struct mm_struct *mm, int behavior)
 static void madvise_unlock(struct mm_struct *mm, int behavior)
 {
 	if (is_memory_failure(behavior))
-	    return;
+		return;
 
 	if (madvise_need_mmap_write(behavior))
 		mmap_write_unlock(mm);
-- 
2.39.5

