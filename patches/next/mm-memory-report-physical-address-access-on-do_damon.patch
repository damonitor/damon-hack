From: SeongJae Park <sj@kernel.org>
Date: Wed, 23 Jul 2025 21:47:23 -0700
Subject: [PATCH] mm/memory: report physical address access on do_damon_page()

Signed-off-by: SeongJae Park <sj@kernel.org>
---
 mm/memory.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/mm/memory.c b/mm/memory.c
index f77f7f7bad7c..3f133401847a 100644
--- a/mm/memory.c
+++ b/mm/memory.c
@@ -5973,7 +5973,7 @@ static vm_fault_t wp_huge_pud(struct vm_fault *vmf, pud_t orig_pud)
 	return VM_FAULT_FALLBACK;
 }
 
-static void do_damon_page(struct vm_fault *vmf)
+static void do_damon_page(struct vm_fault *vmf, bool huge_pmd)
 {
 	struct damon_access_report access_report = {
 		.addr = vmf->address,
@@ -5981,6 +5981,10 @@ static void do_damon_page(struct vm_fault *vmf)
 		.nr_accesses = 1,
 	};
 
+	if (huge_pmd)
+		access_report.addr = PFN_PHYS(pmd_pfn(vmf->orig_pmd));
+	else
+		access_report.addr = PFN_PHYS(pte_pfn(vmf->orig_pte));
 	damon_report_access(&access_report);
 }
 
@@ -6049,7 +6053,7 @@ static vm_fault_t handle_pte_fault(struct vm_fault *vmf)
 		return do_swap_page(vmf);
 
 	if (pte_protnone(vmf->orig_pte) && vma_is_accessible(vmf->vma)) {
-		do_damon_page(vmf);
+		do_damon_page(vmf, false);
 		return do_numa_page(vmf);
 	}
 
@@ -6174,7 +6178,7 @@ static vm_fault_t __handle_mm_fault(struct vm_area_struct *vma,
 		}
 		if (pmd_trans_huge(vmf.orig_pmd)) {
 			if (pmd_protnone(vmf.orig_pmd) && vma_is_accessible(vma)) {
-				do_damon_page(&vmf);
+				do_damon_page(&vmf, true);
 				return do_huge_pmd_numa_page(&vmf);
 			}
 
-- 
2.39.5

