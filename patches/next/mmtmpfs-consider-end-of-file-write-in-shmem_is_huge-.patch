From: Andrew Morton <akpm@linux-foundation.org>
Date: Tue, 3 Sep 2024 13:17:51 -0700
Subject: [PATCH] 
 mmtmpfs-consider-end-of-file-write-in-shmem_is_huge-checkpatch-fixes

ERROR: code indent should use tabs where possible
#215: FILE: mm/shmem.c:1676:
+^I^I       ^I^I^I^Ishmem_huge_force, vma, vm_flags);$

WARNING: please, no space before tabs
#215: FILE: mm/shmem.c:1676:
+^I^I       ^I^I^I^Ishmem_huge_force, vma, vm_flags);$

ERROR: code indent should use tabs where possible
#254: FILE: mm/shmem.c:2439:
+^I       ^Istruct folio **foliop, enum sgp_type sgp)$

WARNING: please, no space before tabs
#254: FILE: mm/shmem.c:2439:
+^I       ^Istruct folio **foliop, enum sgp_type sgp)$

total: 2 errors, 2 warnings, 263 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./patches/mmtmpfs-consider-end-of-file-write-in-shmem_is_huge.patch has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.

Please run checkpatch prior to sending patches

Cc: Rik van Riel <riel@surriel.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 mm/shmem.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/mm/shmem.c b/mm/shmem.c
index 375ae3f170a3..74f093d88c78 100644
--- a/mm/shmem.c
+++ b/mm/shmem.c
@@ -1673,7 +1673,7 @@ unsigned long shmem_allowable_huge_orders(struct inode *inode,
 		return 0;
 
 	global_huge = shmem_huge_global_enabled(inode, index, write_end,
-		       				shmem_huge_force, vma, vm_flags);
+					shmem_huge_force, vma, vm_flags);
 	if (!vma || !vma_is_anon_shmem(vma)) {
 		/*
 		 * For tmpfs, we now only support PMD sized THP if huge page
@@ -2436,7 +2436,7 @@ static int shmem_get_folio_gfp(struct inode *inode, pgoff_t index,
  * Return: 0 if successful, else a negative error code.
  */
 int shmem_get_folio(struct inode *inode, pgoff_t index, loff_t write_end,
-	       	struct folio **foliop, enum sgp_type sgp)
+		    struct folio **foliop, enum sgp_type sgp)
 {
 	return shmem_get_folio_gfp(inode, index, write_end, foliop, sgp,
 			mapping_gfp_mask(inode->i_mapping), NULL, NULL);
-- 
2.46.1

