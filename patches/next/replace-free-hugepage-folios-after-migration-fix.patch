From: Andrew Morton <akpm@linux-foundation.org>
Date: Wed, 18 Dec 2024 17:57:21 -0800
Subject: [PATCH] replace-free-hugepage-folios-after-migration-fix

fix comments, 80-column tweak

Cc: Baolin Wang <baolin.wang@linux.alibaba.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: Muchun Song <muchun.song@linux.dev>
Cc: yangge <yangge1116@126.com>
Cc: SeongJae Park <sj@kernel.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 mm/hugetlb.c    |  5 +++--
 mm/page_alloc.c | 11 +++++------
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/mm/hugetlb.c b/mm/hugetlb.c
index 2408a195d3d0..354eec6f7e84 100644
--- a/mm/hugetlb.c
+++ b/mm/hugetlb.c
@@ -2978,7 +2978,7 @@ int isolate_or_dissolve_huge_page(struct page *page, struct list_head *list)
 /*
  *  replace_free_hugepage_folios - Replace free hugepage folios in a given pfn
  *  range with new folios.
- *  @stat_pfn: start pfn of the given pfn range
+ *  @start_pfn: start pfn of the given pfn range
  *  @end_pfn: end pfn of the given pfn range
  *  Returns 0 on success, otherwise negated error.
  */
@@ -3000,7 +3000,8 @@ int replace_free_hugepage_folios(unsigned long start_pfn, unsigned long end_pfn)
 		}
 
 		if (!folio_ref_count(folio)) {
-			ret = alloc_and_dissolve_hugetlb_folio(h, folio, &isolate_list);
+			ret = alloc_and_dissolve_hugetlb_folio(h, folio,
+							       &isolate_list);
 			if (ret)
 				break;
 
diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 8813dc3ab9ec..aa70d0e73d6d 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -6509,12 +6509,11 @@ int alloc_contig_range_noprof(unsigned long start, unsigned long end,
 		goto done;
 
 	/*
-	 * When in-use hugetlb pages are migrated, they may simply be
-	 * released back into the free hugepage pool instead of being
-	 * returned to the buddy system. After the migration of in-use
-	 * huge pages is completed, we will invoke the
-	 * replace_free_hugepage_folios() function to ensure that
-	 * these hugepages are properly released to the buddy system.
+	 * When in-use hugetlb pages are migrated, they may simply be released
+	 * back into the free hugepage pool instead of being returned to the
+	 * buddy system.  After the migration of in-use huge pages is completed,
+	 * we will invoke replace_free_hugepage_folios() to ensure that these
+	 * hugepages are properly released to the buddy system.
 	 */
 	ret = replace_free_hugepage_folios(start, end);
 	if (ret)
-- 
2.39.5

