From hackermail Thu Jan  1 00:00:00 1970
From: SeongJae Park <sj@kernel.org>
To: Andrew Morton <akpm@linux-foundation.org>
CC: Andrew Paniakin <apanyaki@amazon.com>, SeongJae Park <sj@kernel.org>, Shuah Khan <shuah@kernel.org>, damon@lists.linux.dev, linux-mm@kvack.org, linux-kselftest@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH 1/6] selftests/damon/huge_count_read_write: provide sufficiently large buffer for DEPRECATED file read
Message-Id: <20241028233058.283381-2-sj@kernel.org>
In-Reply-To: <20241028233058.283381-1-sj@kernel.org>
Date: Mon, 28 Oct 2024 16:30:53 -0700

From: Andrew Paniakin <apanyaki@amazon.com>

'huge_count_read_write' crashes with segmentation fault when reading
DEPRECATED file of DAMON debugfs interface.  This is not causing any
problem for users or other tests because the purpose of the test is just
ensuring the read is not causing kernel warning messages.  Nonetheless,
it makes the output unnecessarily noisy, and the DEPRECATED file is not
properly being tested.

It happens because the size of the content of the file is larger than
the size of the buffer for the read.  The file contains about 170
characters.  Increase the buffer size to 256 characters.

Fixes: b4a002889d24 ("selftests/damon: test debugfs file reads/writes with huge count")
Signed-off-by: Andrew Paniakin <apanyaki@amazon.com>
Signed-off-by: SeongJae Park <sj@kernel.org>
Link: https://patch.msgid.link/20241028233058.283381-2-sj@kernel.org
---

Note that this fix has originally wrote[1] by Andrew for the downstream
version of the same test.  Because the downstream version is hosted on
GitHub, the original patch was posted via GitHub pull request, not to
the mailing list.

[1] https://github.com/damonitor/damon-tests/commit/fec6e1f4559a

 tools/testing/selftests/damon/huge_count_read_write.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/tools/testing/selftests/damon/huge_count_read_write.c b/tools/testing/selftests/damon/huge_count_read_write.c
index a6fe0689f88d..f3c199dc8eba 100644
--- a/tools/testing/selftests/damon/huge_count_read_write.c
+++ b/tools/testing/selftests/damon/huge_count_read_write.c
@@ -18,7 +18,7 @@
 void write_read_with_huge_count(char *file)
 {
 	int filedesc = open(file, O_RDWR);
-	char buf[25];
+	char buf[256];
 	int ret;
 
 	printf("%s %s\n", __func__, file);
-- 
2.39.5