From hackermail Thu Jan  1 00:00:00 1970
From: SeongJae Park <sj@kernel.org>
Cc: SeongJae Park <sj@kernel.org>, Andrew Morton <akpm@linux-foundation.org>, damon@lists.linux.dev, kernel-team@meta.com, linux-kernel@vger.kernel.org, linux-mm@kvack.org
Message-Id: <20250226063651.513178-2-sj@kernel.org>
In-Reply-To: <20250226063651.513178-1-sj@kernel.org>
Date: Tue, 25 Feb 2025 22:36:39 -0800
Subject: [RFC PATCH 01/13] mm/damon/sysfs: validate user inputs from damon_sysfs_commit_input()

Online DAMON parameters commit via DAMON sysfs interface can make
kdamond stop.  This behavior was made because it can make the
implementation simpler.  The implementation simply tries committing the
parameter without validation.  If it finds something wrong, it returns
error without reverting partially committed parameters back.  It is safe
though, since it breaks kdamond main loop in the case of the error
return.

Users can make the wrong parameters by mistake, though.  Validating the
input parameters first and returning the error when some parameters
wrong, while letting kdamond continues running with the old parameters
would be the better behavior.  This behavior can also make damon_call()
carrying the online commit instead of the damon_callback hook in future
easier, because damon_call() cannot directly break kdamond main loop.

Implement the better behavior.

Signed-off-by: SeongJae Park <sj@kernel.org>
Link: https://patch.msgid.link/20250226063651.513178-2-sj@kernel.org
---
 mm/damon/sysfs.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/mm/damon/sysfs.c b/mm/damon/sysfs.c
index ccd435d234b9..87e4c6e3614e 100644
--- a/mm/damon/sysfs.c
+++ b/mm/damon/sysfs.c
@@ -1449,11 +1449,11 @@ static struct damon_ctx *damon_sysfs_build_ctx(
  * damon_sysfs_commit_input() - Commit user inputs to a running kdamond.
  * @kdamond:	The kobject wrapper for the associated kdamond.
  *
- * If the sysfs input is wrong, the kdamond will be terminated.
+ * Returns error if the sysfs input is wrong.
  */
 static int damon_sysfs_commit_input(struct damon_sysfs_kdamond *kdamond)
 {
-	struct damon_ctx *param_ctx;
+	struct damon_ctx *param_ctx, *test_ctx;
 	int err;
 
 	if (!damon_sysfs_kdamond_running(kdamond))
@@ -1465,7 +1465,15 @@ static int damon_sysfs_commit_input(struct damon_sysfs_kdamond *kdamond)
 	param_ctx = damon_sysfs_build_ctx(kdamond->contexts->contexts_arr[0]);
 	if (IS_ERR(param_ctx))
 		return PTR_ERR(param_ctx);
+	test_ctx = damon_new_ctx();
+	err = damon_commit_ctx(test_ctx, param_ctx);
+	if (err) {
+		damon_sysfs_destroy_targets(test_ctx);
+		damon_destroy_ctx(test_ctx);
+		goto out;
+	}
 	err = damon_commit_ctx(kdamond->damon_ctx, param_ctx);
+out:
 	damon_sysfs_destroy_targets(param_ctx);
 	damon_destroy_ctx(param_ctx);
 	return err;
-- 
2.39.5