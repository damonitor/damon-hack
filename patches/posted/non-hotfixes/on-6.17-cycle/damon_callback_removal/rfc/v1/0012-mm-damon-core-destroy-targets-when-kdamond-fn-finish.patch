From hackermail Thu Jan  1 00:00:00 1970
From: SeongJae Park <sj@kernel.org>
Cc: SeongJae Park <sj@kernel.org>, Andrew Morton <akpm@linux-foundation.org>, damon@lists.linux.dev, kernel-team@meta.com, linux-kernel@vger.kernel.org, linux-mm@kvack.org
Message-Id: <20250706200018.42704-13-sj@kernel.org>
In-Reply-To: <20250706200018.42704-1-sj@kernel.org>
Date: Sun,  6 Jul 2025 13:00:16 -0700
Subject: [RFC PATCH 12/14] mm/damon/core: destroy targets when kdamond_fn() finish

When kdamond_fn() completes, the targets are kept.  Those are kept to
let callers do additional cleanups if they need.  There are no such
additional cleanups though.  DAMON sysfs interface deallocates those in
before_terminate() callback, to reduce unnecessary memory usage, for
[f]vaddr use case.  Just destroy the targets for every case in the core
layer.  This saves more memory and simplifies the logic.

Signed-off-by: SeongJae Park <sj@kernel.org>
Link: https://patch.msgid.link/20250706200018.42704-13-sj@kernel.org
Cc: Andrew Morton <akpm@linux-foundation.org>
---
 mm/damon/core.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/mm/damon/core.c b/mm/damon/core.c
index 6d526c5263d3..719373bcfaad 100644
--- a/mm/damon/core.c
+++ b/mm/damon/core.c
@@ -2617,6 +2617,7 @@ static int kdamond_fn(void *data)
 		running_exclusive_ctxs = false;
 	mutex_unlock(&damon_lock);
 
+	damon_destroy_targets(ctx);
 	return 0;
 }
 
-- 
2.39.5