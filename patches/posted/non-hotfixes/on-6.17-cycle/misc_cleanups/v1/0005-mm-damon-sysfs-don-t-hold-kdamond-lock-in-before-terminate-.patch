From hackermail Thu Jan  1 00:00:00 1970
From: SeongJae Park <sj@kernel.org>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: SeongJae Park <sj@kernel.org>, damon@lists.linux.dev, kernel-team@meta.com, linux-kernel@vger.kernel.org, linux-mm@kvack.org
Message-Id: <20250705175000.56259-6-sj@kernel.org>
In-Reply-To: <20250705175000.56259-1-sj@kernel.org>
Date: Sat,  5 Jul 2025 10:49:59 -0700
Subject: [PATCH 5/6] mm/damon/sysfs: don't hold kdamond_lock in before_terminate()

damon_sysfs_before_terminate() is a DAMON callback that is executed from
the kdamond's context.  Hence it is safe to access DAMON context
internal data.  But the function is unnecessarily holding kdamond_lock
of the context.  It is just unnecessary.  Remove the locking code.

Signed-off-by: SeongJae Park <sj@kernel.org>
Link: https://patch.msgid.link/20250705175000.56259-6-sj@kernel.org
---
 mm/damon/sysfs.c | 2 --
 1 file changed, 2 deletions(-)

diff --git a/mm/damon/sysfs.c b/mm/damon/sysfs.c
index 79d65dcc9dd0..c0193de6fb9a 100644
--- a/mm/damon/sysfs.c
+++ b/mm/damon/sysfs.c
@@ -1387,12 +1387,10 @@ static void damon_sysfs_before_terminate(struct damon_ctx *ctx)
 	if (!damon_target_has_pid(ctx))
 		return;
 
-	mutex_lock(&ctx->kdamond_lock);
 	damon_for_each_target_safe(t, next, ctx) {
 		put_pid(t->pid);
 		damon_destroy_target(t);
 	}
-	mutex_unlock(&ctx->kdamond_lock);
 }
 
 /*
-- 
2.39.5