TODOs
=====

WIP
---

- DAMON_LRU_SORT modernization
  - RFC sent: https://lore.kernel.org/20250628165144.55528-1-sj@kernel.org
- page fault based DAMON ops
  - premature RFC sent:
    https://lore.kernel.org/20250629201443.52569-1-sj@kernel.org
- DAMON_STAT: provide auto-tuned aggregation intervals
  (important for 0 idle time)
- DAMON_STAT: give negative value for >0 nr_accesses?

- Documentation cleanup: Make link from design to API

Planning / Considering
----------------------

- cleanup damon_set_attrs() documentation
- cleanup unnecessary folio_get() in vaddr
- refactor vaddr's migration code use pmd walk function only
- add kunit test for damon_call() and damos_walk()
- DAMON-based khugepaged
  - Make khugepaged listen DAMON's voice when collapsing
- Support multi contexts per kdamond
- Add sharable kdamond
  - Run with auto-tuned intervals
  - Let API callers report access information, read monitoring results and
    add/remove DAMOS schemes
    - Major callers would be DAMON modules
    - damon_get_handle(), damon_report_access(), damos_add_folios()
  - Let ABI users read monitoring results and DAMOS stat
    - /sys/kernel/mm/damon/???/
- DAMON_NUMA_MIGRATE
  - Aim for not only traditional NUMA but also tiering
  - Just extend mtier to every node, but CPU-aware.
- add kdamond sysfs command for updating stats and tried regions together
- add kdamond sysfs command for keeping every content up to date
- sysfs command for updating all files (for damo report damon)
  - maybe periodically?
- sysfs command for updating params (for restoring old params)
- write a selftest for sz_filter_passed
- refactor samples to use damon_call and damos_walk
- contigurized-vddr
  - trat end of a discrete region as start of next region
  - connect regions before and after huge unmapped area
  - connect regions of different virtual addresses
- Write API documentation
  - no just kerenl doc, but more structured document is needed
- Let users decide regions split factor
  - https://lore.kernel.org/20241026215311.148363-1-sj@kernel.org
- Let users periodically split regions without per-region subregions limit
  - https://lore.kernel.org/20241026215311.148363-1-sj@kernel.org
- Sampling based page level properties based monitoring
  - For DAMOS_STAT, do sampling for sz_filter_passed calculation
    - Let user sets the number of samples per region for this
- Support reserved uninstall of DAMOS
  - Allow running DAMOS scheme for only specific apply intervals
- Extend for memory bandwidth monitoring
- Extend for AMD IBS-based monitoring
- Extend for cache-set space monitoring
- Extend for cache-line space monitoring
  - Require sub-page level monitoring (IBS?)
- Access/Contiguity-aware Memory Auto-scaling
  - https://lore.kernel.org/damon/20240512193657.79298-1-sj@kernel.org
- Support cleaning sysfs input files up to committed values
- implement pause/resume of kdamonds
- holistic heterogenous memory management
  - address CPU-numa, CXL-numa, and device(e.g., GPU)-numa nodes
- DAMON_LRU_SORT auto-tuning
  - Let auto-tuning using active/inactive memory ratio
- Selftests: Test DAMON online tuning
- Selftests: Test DAMOS online tuning
- Selftests: Test DAMOS filter
- Make 'age' counted by sample_interval rather than aggregation interval
- CPU time quota for DAMON monitirng
- monitoring part CPU usage statistics
- onetime callback
  - manually setting callback function pointers looks dangeraous.  Provide more
    decent interface, like register/unregister_damon_callback, and one time
    callback like call_rcu()
- Setting resolution of damos tried_regions
  - Should be able to control the directories population overhead when the
    number of regions is big
- More DAMON modules
  - DAMON_WSS: Yet another DAMON module for WSS monitoring with ro/wo/rw
  - DAMON-based THP hinting module
- rename nr_accesses/moving_accesses_bp
- mark nr_accesses as private
- use a dedicated struct for access rate
- let kdamond name be user-defined
- let DAMON modules share one kdamond
- unify DAMON modules
- support multiple contexts per kdamond
- DAMON-based VMA split/merge
  - Help big VMA contention issue?
  - We can further expose the monitoring results via vma name
  - Reading results becomes very easy
- Contig memory access util monitoring
- WSS/RSS based processes sorting
- LRU-based monitoring ops
- rename damon_sysfs_scheme to damos_sysfs
- automatic paddr regions detection
  (handle hot(un)plugged memory regions)
- Fixed granularity idleness monitoring
  - Must be useful for further DAMON overhead/accuracy evaluation
- Improve regions-based monitoring quality
- Support cgroups
- Support tlb flushing
  - https://lore.kernel.org/all/a2fb10bd-b44a-350e-f693-82ecfa6f54a8@huawei.com/
- Add __counted_by() annotation when ready
  (https://lore.kernel.org/r/CAKwvOdkvGTGiWzqEFq=kzqvxSYP5vUj3g9Z-=MZSQROzzSa_dg@mail.gmail.com)
- Ideas from LSFMM
  - Add operations driven access check
    - Let it calls DAMON functions for noticed access and then let DAMON records
      the access
  - Take care of fairness on ACMA (e.g., NUMA)
- Consider hugetlb handling optimization
  - DAMON_RECLAIM will meaninglessly try reclaiming hugetlb pages, consume
    CPUs.  Find a way to optimize.

Frozen
------

- handle >unsigned long address space (32bit ARM with LPAE)
  - RFC sent: https://lore.kernel.org/20250416042551.158131-1-sj@kernel.org
  - pending due to absence of feedback from original requester
  - dropped from damon/next

Recently Done
-------------

- Add DAMON_STAT module
  - merged into mainline, for 6.17
- use alloc_migration_target() and revert unnecessary changes
  - merged into mainline, for 6.17
- drgn based sysfs selftests
  - merged into mainline, for 6.17
- add trace events for auto-tunings
  - merged into mainline, for 6.17
- damon_call/damos_walk part 2
  - merged into mainline, for 6.17
- add drgn-selftest for entire sysfs parameters
  - merged into mainline, for 6.17
